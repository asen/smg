apiVersion: apps/v1
kind: Deployment
metadata:
  name: smg
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: smg
  template:
    metadata:
      labels:
        app: smg
    spec:
      containers:
        # The SMG container
        - name: smg
          image: "docker.pkg.github.com/asen/smg/smg-1.1:latest"
          ports:
            - containerPort: 9000
            - containerPort: 9001
          volumeMounts:
            - name: smg-config-volume
              mountPath: /etc/smg/conf.d
            - name: smg-kube-config-volume
              mountPath: /etc/smg/kube-clusters.d
            - name: smg-data-volume
              mountPath: /opt/smg/data
            - name: smg-scrape-targets-volume
              mountPath: /etc/smg/scrape-targets.d
            - name: smg-scrape-private-volume
              mountPath: /etc/smg/scrape-private.d
            - name: rrdcached-sock-volume
              mountPath: /var/rrdtool/rrdcached
            - name: smg-sa-token-volume
              mountPath: /etc/smg/kube-token
            - name: smg-images-volume
              mountPath: /opt/smg/inst/smg/public/smg
        # a rrdcached container (same image but runs rrdcached)
        - name: rrdcached
          image: "docker.pkg.github.com/asen/smg/smg-1.1:latest"
          command: [ "/usr/bin/rrdcached" ]
          args: ["-g", "-l", "unix:/var/rrdtool/rrdcached/rrdcached.sock", "-m", "664", "-b", "/var/rrdtool/rrdcached"]
          volumeMounts:
            - name: smg-data-volume
              mountPath: /opt/smg/data
            - name: rrdcached-sock-volume
              mountPath: /var/rrdtool/rrdcached
        # an nginx container to relieve SMG from serving images
        - name: nginx
          image: nginx:1.18.0
          ports:
            - containerPort: 9080
              name: nginx
          volumeMounts:
            - name: smg-nginx-conf-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: smg-images-volume
              mountPath: /usr/share/nginx/html/smgimages
        # one more container to watch for changes in conf.d and reload config
        - name: watch
          image: "weaveworks/watch:master-5b2a6e5"
          imagePullPolicy: IfNotPresent
          args: ["-v", "-t", "-p=/etc/smg/conf.d", "curl", "-X", "POST", "--fail", "-o", "-", "-sS", "http://localhost:9000/reload"]
          volumeMounts:
            - name: smg-config-volume
              mountPath: /etc/smg/conf.d
      volumes:
        - name: smg-config-volume
          configMap:
            name: smg-configmap
        - name: smg-kube-config-volume
          configMap:
            name: smg-kube-configmap
        - name: smg-data-volume
          persistentVolumeClaim:
            claimName: smg-data-vol1-claim
        - name: smg-scrape-targets-volume
          persistentVolumeClaim:
            claimName: smg-conf-scrape-targets-vol1-claim
        - name: smg-scrape-private-volume
          persistentVolumeClaim:
            claimName: smg-conf-scrape-private-vol1-claim
        - name: rrdcached-sock-volume
          emptyDir: {}
        - name: smg-sa-token-volume
          secret:
            secretName: smg-sa-token
        - name: smg-nginx-conf-volume
          configMap:
            name: smg-nginx-configmap
        # a shared between nginx and SMG dir, so that nginx can serve images
        - name: smg-images-volume
          emptyDir: {}
      # nodeSelector:
      #   useLabelToPintToNode: havingTheVolume


