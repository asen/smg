- Smule Grapher (SMG) -
=================================

-- What is this --

Play 2.4/scala (https://www.playframework.com/) app using external scripts to fetch
numbers from services and rrdtool (http://oss.oetiker.ch/rrdtool/) to maintain many
databases and display graphs from them. It can also do a lot more than that - like
checking the fetched valules against pre-configured thresholds and/or anomalies and
sending alerts. It is also possible to extend it via plugins (scala extensions).

Intended to be a simple to maintain but scalable monitoring system for people who
prefer to generate their configs over clicking on UI to set it up.

Check the docs/ dir (or Docs link in a running SMG instance) for more information.

Docs on github: https://github.com/asen/smg/blob/master/docs/index.md

-- Build --

    $ git clone git@github.com:asen/smg.git
    $ cd smg
    $ ./build-smg.sh
    ...
    *** Done. Output in target/universal/smg-0.3.tgz

-- Install and configure --

0. Install prerequisites (e.g on linux):

  # yum install rrdtool

1. Unpack tgz

2. Copy the example config into /etc/smg/config.yml

   # mkdir /etc/smg && cp smg-0.3/smgconf/config-example.yml /etc/smg/config.yml

Also check smgconf/templ-linux-pf.yml which is included by the distributed
config-example.yml. One needs to enable SNMP to make this work for localhost
(see 2.1. below). Then replace localhost with another hostname in a copy of
that file and include the file in /etc/smg/config.yml to add another host
(these would need snmpd configured too).

    2.1. Prepare SNMP to work with the default config (or create your own config)

    These below are for the default conf to work on linux against localhost,
    be warned that the example wipes the default snmpd.conf (after backing it up)
    so make sure you know what you are doing (it obviously requires root access)

      # yum install net-snmp net-snmp-util
      # cp /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.bck
      # echo "rocommunity public localhost" > /etc/snmp/snmpd.conf
      # /etc/init.d/snmpd start

    To verify that SNMP is working:

      # snmpget -v2c -c public localhost laLoad.1
      UCD-SNMP-MIB::laLoad.1 = STRING: 0.00


3. Point JAVA_HOME to a Java 8 installation

4. Start SMG using the start-smg.sh script:

   # ./start-smg.sh

5. Point your browser to localhost:9000 (localhost:9000/assets/docs/index.html for
documentation, replace localhost with the host where SMG was installed if different).


-- Development setup (Mac) --

1. Install JDK 8.
2. Install from brew:

    $ brew install rrdtool coreutils

2. Run:

    $ cd smg
    $ JAVA_HOME=$(/usr/libexec/java_home -v 1.8) ./activator run

3. Install coreutils for gtimeout (brew install coreutils) and change application.conf:

    # Use smg.timeoutCommand to override the timeout command
    # executable (e.g. gtimeout on mac with homebrew)
    smg.timeoutCommand = "gtimeout"

